@page
@model grp_management.Pages.GroupManagementModel
@{
    ViewData["Title"] = "Group Management";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Group Management</h1>
        @if (User.IsInRole("Admin"))
        {
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addGroupModal">
                <i class="fas fa-plus"></i> Add New Group
            </button>
        }
    </div>

    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Message"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card glass-card mb-4">
        <div class="card-body">
            <h5 class="card-title">Existing Groups</h5>
            @if (Model.Groups != null && Model.Groups.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Description</th>
                                <th>Created At</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var group in Model.Groups)
                            {
                                <tr>
                                    <td>@group.Name</td>
                                    <td>@group.Description</td>
                                    <td>@group.CreatedAt.ToShortDateString()</td>
                                    <td>
                                        <button class="btn btn-sm btn-secondary view-members-btn" 
                                            data-group-id="@group.Id" 
                                            data-group-name="@group.Name" 
                                            data-member-count="@Model.GroupMemberCounts[group.Id]">
                                            <i class="fas fa-eye"></i> View
                                        </button>
                                        @if (User.IsInRole("Admin"))
                                        {
                                            <button class="btn btn-sm btn-info edit-group-btn" 
                                                    data-id="@group.Id"
                                                    data-name="@group.Name"
                                                    data-description="@group.Description">
                                                <i class="fas fa-edit"></i> Edit
                                            </button>
                                            <form method="post" asp-page-handler="DeleteGroup" asp-route-id="@group.Id" onsubmit="return confirm('Are you sure you want to delete this group?');" class="d-inline">
                                                <button type="submit" class="btn btn-sm btn-danger"><i class="fas fa-trash"></i> Delete</button>
                                            </form>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info" role="alert">
                    No groups found. Please add a new group.
                </div>
            }
        </div>
    </div>

    <!-- Add Group Modal -->
    <div class="modal fade" id="addGroupModal" tabindex="-1" aria-labelledby="addGroupModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form method="post" asp-page-handler="AddGroup">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addGroupModalLabel">Add New Group</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="groupName" class="form-label">Group Name</label>
                            <input type="text" class="form-control" id="groupName" asp-for="Group.Name" required>
                        </div>
                        <div class="mb-3">
                            <label for="groupDescription" class="form-label">Description</label>
                            <textarea class="form-control" id="groupDescription" asp-for="Group.Description" rows="3"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Add Group</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Edit Group Modal -->
    <div class="modal fade" id="editGroupModal" tabindex="-1" aria-labelledby="editGroupModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form method="post" asp-page-handler="EditGroup">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editGroupModalLabel">Edit Group</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" id="editGroupId" asp-for="Group.Id">
                        <div class="mb-3">
                            <label for="editGroupName" class="form-label">Group Name</label>
                            <input type="text" class="form-control" id="editGroupName" asp-for="Group.Name" required>
                        </div>
                        <div class="mb-3">
                            <label for="editGroupDescription" class="form-label">Description</label>
                            <textarea class="form-control" id="editGroupDescription" asp-for="Group.Description" rows="3"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Member Count Modal -->
    <div class="modal fade" id="memberCountModal" tabindex="-1" aria-labelledby="memberCountModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="memberCountModalLabel">Group Members</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p id="memberCountText"></p>
                    <ul id="memberList" class="list-group"></ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Prepare a JS object with group members from Razor
        const groupMembers = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.GroupMembers));
        const currentEmployeeId = @Model.CurrentEmployeeId?.ToString() ?? 'null';
        document.addEventListener('DOMContentLoaded', function () {
            // Edit Group Modal Logic
            document.querySelectorAll('.edit-group-btn').forEach(button => {
                button.addEventListener('click', function () {
                    const id = this.dataset.id;
                    const name = this.dataset.name;
                    const description = this.dataset.description;

                    document.getElementById('editGroupId').value = id;
                    document.getElementById('editGroupName').value = name;
                    document.getElementById('editGroupDescription').value = description;

                    var editGroupModal = new bootstrap.Modal(document.getElementById('editGroupModal'));
                    editGroupModal.show();
                });
            });

            // View Members Modal Logic
            document.querySelectorAll('.view-members-btn').forEach(button => {
                button.addEventListener('click', function () {
                    const groupId = this.dataset.groupId;
                    const groupName = this.dataset.groupName;
                    const memberCount = this.dataset.memberCount;
                    document.getElementById('memberCountModalLabel').textContent = `Members in ${groupName}`;
                    document.getElementById('memberCountText').textContent = `This group has ${memberCount} member${memberCount == 1 ? '' : 's'}.`;
                    // Render member list
                    const memberList = groupMembers[groupId] || [];
                    const memberListElem = document.getElementById('memberList');
                    memberListElem.innerHTML = '';
                    if (memberList.length === 0) {
                        memberListElem.innerHTML = '<li class="list-group-item">No members in this group.</li>';
                    } else {
                        memberList.forEach(m => {
                            let highlight = (currentEmployeeId !== 'null' && m.Item1 == currentEmployeeId) ? 'fw-bold text-success' : '';
                            let badge = (currentEmployeeId !== 'null' && m.Item1 == currentEmployeeId) ? '<span class="badge bg-success ms-2">You</span>' : '';
                            memberListElem.innerHTML += `<li class="list-group-item d-flex justify-content-between align-items-center ${highlight}">${m.Item2} <span class='text-muted small'>${m.Item3}</span> ${badge}</li>`;
                        });
                    }
                    var memberCountModal = new bootstrap.Modal(document.getElementById('memberCountModal'));
                    memberCountModal.show();
                });
            });

            // Close modal after form submission redirect (if TempData["Message"] is set)
            // This logic is mostly for non-AJAX form submissions, might not be strictly needed for AJAX ones
            if ("@TempData["Message"]" !== "") {
                var addGroupModal = bootstrap.Modal.getInstance(document.getElementById('addGroupModal'));
                if (addGroupModal) { addGroupModal.hide(); }
                var editGroupModal = bootstrap.Modal.getInstance(document.getElementById('editGroupModal'));
                if (editGroupModal) { editGroupModal.hide(); }
            }
        });
    </script>
} 