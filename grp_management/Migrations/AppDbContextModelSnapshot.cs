// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using grp_management.Data;

#nullable disable

namespace grp_management.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("grp_management.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessLevel")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Member");

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            AccessLevel = "Admin",
                            AddedAt = new DateTime(2025, 6, 25, 15, 26, 57, 229, DateTimeKind.Utc).AddTicks(9165),
                            EmployeeId = -1,
                            GroupId = -1,
                            UserId = -1,
                            UserName = "testuser1"
                        },
                        new
                        {
                            Id = -2,
                            AccessLevel = "Member",
                            AddedAt = new DateTime(2025, 6, 25, 15, 26, 57, 229, DateTimeKind.Utc).AddTicks(9169),
                            EmployeeId = -2,
                            GroupId = -2,
                            UserId = -2,
                            UserName = "testuser2"
                        });
                });

            modelBuilder.Entity("grp_management.Models.Employee", b =>
                {
                    b.Property<int>("EmpNO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmpNO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpNO"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("EmpNO");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmpNO = -1,
                            CreatedAt = new DateTime(2025, 6, 25, 15, 26, 56, 588, DateTimeKind.Utc).AddTicks(6197),
                            Department = "IT",
                            Email = "test.employee1@example.com",
                            Name = "Test Employee 1",
                            Position = "Developer"
                        },
                        new
                        {
                            EmpNO = -2,
                            CreatedAt = new DateTime(2025, 6, 25, 15, 26, 56, 588, DateTimeKind.Utc).AddTicks(6200),
                            Department = "HR",
                            Email = "test.employee2@example.com",
                            Name = "Test Employee 2",
                            Position = "Assistant"
                        });
                });

            modelBuilder.Entity("grp_management.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentRestriction")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxMembers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedAt = new DateTime(2025, 6, 25, 15, 26, 56, 588, DateTimeKind.Utc).AddTicks(6400),
                            DepartmentRestriction = "IT",
                            Description = "A test group for membership requests",
                            IsPrivate = true,
                            MaxMembers = 10,
                            Name = "Test Group 1"
                        },
                        new
                        {
                            Id = -2,
                            CreatedAt = new DateTime(2025, 6, 25, 15, 26, 56, 588, DateTimeKind.Utc).AddTicks(6403),
                            DepartmentRestriction = "HR",
                            Description = "Another test group",
                            IsPrivate = false,
                            MaxMembers = 20,
                            Name = "Test Group 2"
                        });
                });

            modelBuilder.Entity("grp_management.Models.GroupEmployee", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("GroupId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("GroupEmployees");
                });

            modelBuilder.Entity("grp_management.Models.GroupMembershipRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<string>("AdminComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.HasKey("RequestId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProcessedByUserId");

                    b.ToTable("GroupMembershipRequests");

                    b.HasData(
                        new
                        {
                            RequestId = -1,
                            EmployeeId = -1,
                            GroupId = -1,
                            RequestDate = new DateTime(2025, 6, 24, 15, 26, 56, 588, DateTimeKind.Utc).AddTicks(6436),
                            Status = "Pending"
                        },
                        new
                        {
                            RequestId = -2,
                            EmployeeId = -2,
                            GroupId = -2,
                            RequestDate = new DateTime(2025, 6, 25, 15, 26, 56, 588, DateTimeKind.Utc).AddTicks(6448),
                            Status = "Pending"
                        },
                        new
                        {
                            RequestId = -3,
                            EmployeeId = -2,
                            GroupId = -1,
                            ProcessedDate = new DateTime(2025, 6, 24, 15, 26, 56, 588, DateTimeKind.Utc).AddTicks(6451),
                            RequestDate = new DateTime(2025, 6, 23, 15, 26, 56, 588, DateTimeKind.Utc).AddTicks(6450),
                            Status = "Approved"
                        },
                        new
                        {
                            RequestId = -4,
                            AdminComments = "Did not meet department requirements.",
                            EmployeeId = -1,
                            GroupId = -2,
                            ProcessedDate = new DateTime(2025, 6, 23, 15, 26, 56, 588, DateTimeKind.Utc).AddTicks(6461),
                            RequestDate = new DateTime(2025, 6, 22, 15, 26, 56, 588, DateTimeKind.Utc).AddTicks(6461),
                            Status = "Rejected"
                        });
                });

            modelBuilder.Entity("grp_management.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SentVia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("grp_management.Models.MessageTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Placeholders")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MessageTemplates");
                });

            modelBuilder.Entity("grp_management.Models.SentMsg", b =>
                {
                    b.Property<int>("SentMsgID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SentMsgID"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SenderEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SentVia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TemplateID")
                        .HasColumnType("int");

                    b.Property<string>("VariablesJson")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SentMsgID");

                    b.HasIndex("GroupId");

                    b.HasIndex("SenderEmployeeId");

                    b.HasIndex("TemplateID");

                    b.ToTable("SentMsgs");

                    b.HasData(
                        new
                        {
                            SentMsgID = -1,
                            GroupId = -1,
                            MessageContent = "This is a test message.",
                            SenderEmployeeId = -1,
                            SentDate = new DateTime(2025, 6, 25, 5, 26, 57, 229, DateTimeKind.Utc).AddTicks(9327),
                            SentVia = "WebApp",
                            Status = "Sent",
                            TemplateID = -1,
                            VariablesJson = "{}"
                        },
                        new
                        {
                            SentMsgID = -2,
                            GroupId = -2,
                            MessageContent = "This is another test message.",
                            SenderEmployeeId = -2,
                            SentDate = new DateTime(2025, 6, 25, 10, 26, 57, 229, DateTimeKind.Utc).AddTicks(9341),
                            SentVia = "WebApp",
                            Status = "Sent",
                            TemplateID = -2,
                            VariablesJson = "{}"
                        },
                        new
                        {
                            SentMsgID = -3,
                            GroupId = -1,
                            MessageContent = "A third test message for all.",
                            SenderEmployeeId = -1,
                            SentDate = new DateTime(2025, 6, 22, 0, 34, 57, 485, DateTimeKind.Local).AddTicks(4134),
                            SentVia = "API",
                            Status = "Sent",
                            TemplateID = -1,
                            VariablesJson = "{}"
                        });
                });

            modelBuilder.Entity("grp_management.Models.Template", b =>
                {
                    b.Property<int>("TemplateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemplateID"));

                    b.Property<string>("Placeholders")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateMsg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TemplateType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TemplateID");

                    b.ToTable("Templates");

                    b.HasData(
                        new
                        {
                            TemplateID = -1,
                            Placeholders = "{\"Name\":\"Recipient Name\"}",
                            TemplateMsg = "Happy Birthday, {{Name}}! Wishing you a wonderful day.",
                            TemplateName = "Happy Birthday",
                            TemplateType = "General"
                        },
                        new
                        {
                            TemplateID = -2,
                            Placeholders = "{}",
                            TemplateMsg = "Reminder: Meeting at 11 AM. See you there!",
                            TemplateName = "Meeting Reminder",
                            TemplateType = "Frequent"
                        },
                        new
                        {
                            TemplateID = -3,
                            Placeholders = "{\"Name\":\"Recipient Name\",\"ProjectName\":\"Name of the Project\",\"Status\":\"Current Project Status\"}",
                            TemplateMsg = "Hello {{Name}}, this is an update regarding your project '{{ProjectName}}'. Current Status: {{Status}}.",
                            TemplateName = "Project Update",
                            TemplateType = "General"
                        },
                        new
                        {
                            TemplateID = -4,
                            Placeholders = "{}",
                            TemplateMsg = "Season's Greetings! Wishing you a happy and prosperous holiday season from all of us.",
                            TemplateName = "Holiday Greeting",
                            TemplateType = "Frequent"
                        },
                        new
                        {
                            TemplateID = -5,
                            Placeholders = "{}",
                            TemplateMsg = "Please be advised that there will be scheduled maintenance in the office this weekend. Please save all your work before leaving on Friday.",
                            TemplateName = "Office Maintenance",
                            TemplateType = "General"
                        });
                });

            modelBuilder.Entity("grp_management.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedAt = new DateTime(2025, 6, 25, 15, 26, 56, 907, DateTimeKind.Utc).AddTicks(4372),
                            Email = "admin@example.com",
                            PasswordHash = "$2a$12$NCg9W9Tmw.REbESsFxJ.V.Z/wvcnnBc5T24MTbIRomoTngfSYTwoW",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = -2,
                            CreatedAt = new DateTime(2025, 6, 25, 15, 26, 57, 229, DateTimeKind.Utc).AddTicks(8381),
                            Email = "user@example.com",
                            PasswordHash = "$2a$12$1KoQonqvVlWSs5bVLmPLN.6JPa./dPB6.0GpuynDHZgwyQlB7.0ea",
                            Role = "User",
                            Username = "user"
                        });
                });

            modelBuilder.Entity("grp_management.Models.Contact", b =>
                {
                    b.HasOne("grp_management.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("grp_management.Models.Group", "Group")
                        .WithMany("Contacts")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("grp_management.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Employee");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("grp_management.Models.Group", b =>
                {
                    b.HasOne("grp_management.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("grp_management.Models.GroupEmployee", b =>
                {
                    b.HasOne("grp_management.Models.Employee", "Employee")
                        .WithMany("GroupEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("grp_management.Models.Group", "Group")
                        .WithMany("GroupEmployees")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("grp_management.Models.GroupMembershipRequest", b =>
                {
                    b.HasOne("grp_management.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("grp_management.Models.Group", "Group")
                        .WithMany("MembershipRequests")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("grp_management.Models.User", "ProcessedByUser")
                        .WithMany()
                        .HasForeignKey("ProcessedByUserId");

                    b.Navigation("Employee");

                    b.Navigation("Group");

                    b.Navigation("ProcessedByUser");
                });

            modelBuilder.Entity("grp_management.Models.Message", b =>
                {
                    b.HasOne("grp_management.Models.Group", "Group")
                        .WithMany("Messages")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("grp_management.Models.SentMsg", b =>
                {
                    b.HasOne("grp_management.Models.Group", "Group")
                        .WithMany("SentMessages")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("grp_management.Models.Employee", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("grp_management.Models.Template", "Template")
                        .WithMany("SentMessages")
                        .HasForeignKey("TemplateID");

                    b.Navigation("Group");

                    b.Navigation("Sender");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("grp_management.Models.Employee", b =>
                {
                    b.Navigation("GroupEmployees");
                });

            modelBuilder.Entity("grp_management.Models.Group", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("GroupEmployees");

                    b.Navigation("MembershipRequests");

                    b.Navigation("Messages");

                    b.Navigation("SentMessages");
                });

            modelBuilder.Entity("grp_management.Models.Template", b =>
                {
                    b.Navigation("SentMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
